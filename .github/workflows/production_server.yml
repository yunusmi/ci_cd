name: Update & deploy application code on remote server
on:
  pull_request:
    types:
      - closed
    branches:
      - main
jobs:
  deploy:
    if: github.event.pull_request.merged == true
    name: Update & deploy application code on remote server
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Connect to remote server
        env:
          PRIVATE_KEY: ${{secrets.PRIVATE_KEY}}
          HOSTNAME: ${{secrets.HOSTNAME}}
          USER_NAME: ${{secrets.USER_NAME}}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          echo "Connected to the server"
          echo "Script execution started"

          echo "Stopping container"
          sudo docker stop backend_app

          echo "Removing containers"
          sudo docker container prune

          echo "Removing images"
          sudo docker rmi $(sudo docker images -a -q)

          echo "Setting up repository"
          echo "Removing old project"

          cd /var/www/apps
          sudo rm -r -f ./backend_app

          sudo mkdir backend_app
          cd backend_app
          echo "Initialization git repository"
          sudo git config --global --add safe.directory /var/www/apps/backend_app
          sudo git init
          echo "Adding remote repository"
          sudo git remote add origin https://github.com/ci_cd.git
          sudo git pull origin main
          if [ $? -eq 0 ]; then
            echo "GIT pull success"
          else
            echo "GIT pull failure"
            exit 1;
          fi

          # This is an optional setting. If you don't have any config files such as .env or any other 
          # .config file, you can comment the 2 lines bellow

          echo "Creating config .env file"
          sudo cp /etc/environment /var/www/apps/backend_app/.env # make sure that you added config data to that file. File /etc/environment should include config data for your app

          echo "Building images"

          sudo docker compose build
          sudo docker compose up -d
          sudo docker ps
          '
